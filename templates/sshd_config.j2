{{ ansible_managed | comment }}

{% macro render_options(options, blank_lines=true) %}
{% if options is mapping %}
{% set ssh_options_names = lookup('template', 'options_names.yml') %}
{% else %}
{% set ssh_options_names = options %}
{% endif %}
{% for o in ssh_options_names %}
{% if o is none %}
{% if blank_lines %}

{% endif %}
{% else %}
{% if options is mapping %}
{% set name = sshd_options_map_reverse[o] %}
{% else %}
{% set name = o | regex_replace("<.*>", "") %}
{% endif %}
{% if options is mapping %}
{% set value = options[name] %}
{% else %}
{% set value = lookup('vars', sshd_options_map[name], default=-1) %}
{% endif %}
{% if value is not sameas true
      and value is not sameas false
      and (value is string
          or (value is number and value >= 0)) %}
{{ name }} {{ value }}
{% elif value is sequence %}
{% if o.startswith("<list_comma>") %}
{{ name }} {{ value | join(",") }}
{% elif o.startswith("<list_space>") %}
{{ name }} {{ value | join(" ") }}
{% else %}
{% for i in value %}
{{ name }} {{ i }}
{% endfor %}
{% endif %}
{% elif value == true %}
{{ name }} yes
{% elif value == false %}
{{ name }} no
{% endif %}
{% endif %}
{% endfor %}
{% endmacro %}
{{ render_options(sshd_options) }}
{% for s in sshd_subsystems | default([]) %}
Subsystem {{ s.name }} {{ s.command }}
{% endfor %}

{% for r in sshd_match_rules | default([]) | selectattr("state", "equalto", "present") | list %}
Match {% for c in r.conditions %}{{ c.type }} {{ c.pattern }}
{% endfor %}
{{ render_options(r.options, blank_lines=false) | indent(width=2, indentfirst=true) }}
{% endfor %}
